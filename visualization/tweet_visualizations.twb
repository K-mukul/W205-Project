<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='9.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 9000.15.0506.1800                                -->
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.0'>
      <aliases enabled='yes' />
      <column caption='Keyword' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;playstation&quot;'>
        <calculation class='tableau' formula='&quot;playstation&quot;' />
      </column>
    </datasource>
    <datasource caption='tweets_sentiment (default.tweets_sentiment) (default)' inline='true' name='hadoophive.42346.463601458330' version='9.0'>
      <connection authentication='yes' authentication-type='2' class='hadoophive' connection-type='2' dbname='' odbc-connect-string-extras='' one-time-sql='' port='10000' schema='default' server='ec2-52-90-175-208.compute-1.amazonaws.com' username='root'>
        <relation name='tweets_sentiment' table='[default].[tweets_sentiment]' type='table' />
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
        <connection-customization class='hadoophive' enabled='false' version='9.0'>
          <vendor name='hadoophive' />
          <driver name='hadoophive' />
          <customizations>
            <customization name='CAP_CONNECT_STORED_PROCEDURE' value='no' />
            <customization name='CAP_CREATE_TEMP_TABLES' value='no' />
            <customization name='CAP_DEFERS_CONNECTION_VERIFICATION' value='no' />
            <customization name='CAP_FAST_METADATA' value='no' />
            <customization name='CAP_HIVE_FIX_METADATA_NAMES' value='no' />
            <customization name='CAP_INDEX_TEMP_TABLES' value='no' />
            <customization name='CAP_ODBC_ALWAYS_THROW_CONNECT_ERRORS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_DATETIME_AS_CHAR' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_DATE_AS_CHAR' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_MAX_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_MEDIUM_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_SIGNED' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_SMALL_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_INT64' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_PREFERRED_TYPES' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_WIDE_CHAR' value='no' />
            <customization name='CAP_ODBC_CURSOR_DYNAMIC' value='no' />
            <customization name='CAP_ODBC_CURSOR_FORWARD_ONLY' value='no' />
            <customization name='CAP_ODBC_CURSOR_KEYSET_DRIVEN' value='no' />
            <customization name='CAP_ODBC_CURSOR_STATIC' value='no' />
            <customization name='CAP_ODBC_DRIVER_HIVE_ASSUME_LATEST' value='no' />
            <customization name='CAP_ODBC_ERROR_IGNORE_FALSE_ALARM' value='no' />
            <customization name='CAP_ODBC_FETCH_BUFFERS_RESIZABLE' value='no' />
            <customization name='CAP_ODBC_FETCH_BUFFERS_SIZE_MASSIVE' value='no' />
            <customization name='CAP_ODBC_FETCH_CONTINUE_ON_ERROR' value='no' />
            <customization name='CAP_ODBC_FORCE_SINGLE_ROW_BINDING' value='no' />
            <customization name='CAP_ODBC_METADATA_STRING_LENGTH_UNKNOWN' value='no' />
            <customization name='CAP_ODBC_REBIND_SKIP_UNBIND' value='no' />
            <customization name='CAP_ODBC_TRIM_VARCHAR_PADDING' value='no' />
            <customization name='CAP_ODBC_UNBIND_AUTO' value='no' />
            <customization name='CAP_ODBC_UNBIND_BATCH' value='no' />
            <customization name='CAP_ODBC_UNBIND_EACH' value='no' />
            <customization name='CAP_ODBC_USE_NATIVE_PROTOCOL' value='no' />
            <customization name='CAP_QUERY_BLENDING_ALWAYS_USE_LOCAL_MAPPING_TABLES' value='no' />
            <customization name='CAP_QUERY_BLENDING_PREFER_LOCAL_MAPPING_TABLES' value='yes' />
            <customization name='CAP_QUERY_BLENDING_REMOTE_MAPPING_TABLES' value='yes' />
            <customization name='CAP_QUERY_BOOLEXPR_TO_INTEXPR' value='no' />
            <customization name='CAP_QUERY_BOOL_IDENTIFIER_TO_LOGICAL' value='no' />
            <customization name='CAP_QUERY_FORCE_AGGREGATE_MEASURES' value='no' />
            <customization name='CAP_QUERY_GROUP_BY_ALIAS' value='no' />
            <customization name='CAP_QUERY_GROUP_BY_DEGREE' value='no' />
            <customization name='CAP_QUERY_HAVING_REQUIRES_GROUP_BY' value='no' />
            <customization name='CAP_QUERY_HAVING_UNSUPPORTED' value='no' />
            <customization name='CAP_QUERY_JOIN_ACROSS_SCHEMAS' value='no' />
            <customization name='CAP_QUERY_JOIN_ASSUME_CONSTRAINED' value='no' />
            <customization name='CAP_QUERY_JOIN_PUSH_DOWN_CONDITION_EXPRESSIONS' value='no' />
            <customization name='CAP_QUERY_JOIN_REQUIRES_SCOPE' value='no' />
            <customization name='CAP_QUERY_JOIN_REQUIRES_SUBQUERY' value='no' />
            <customization name='CAP_QUERY_NULL_REQUIRES_CAST' value='no' />
            <customization name='CAP_QUERY_RECOMPILE_FAILED_QUERY' value='no' />
            <customization name='CAP_QUERY_SELECT_ALIASES_SORTED' value='no' />
            <customization name='CAP_QUERY_SIMPLIFY_SUBQUERY_CONTEXT_FOR_JOIN_CULLING' value='no' />
            <customization name='CAP_QUERY_SORT_BY' value='yes' />
            <customization name='CAP_QUERY_SORT_BY_DEGREE' value='no' />
            <customization name='CAP_QUERY_SUBQUERIES' value='yes' />
            <customization name='CAP_QUERY_SUBQUERIES_WITH_TOP' value='yes' />
            <customization name='CAP_QUERY_SUBQUERY_DATASOURCE_CONTEXT' value='yes' />
            <customization name='CAP_QUERY_SUBQUERY_QUERY_CONTEXT' value='yes' />
            <customization name='CAP_QUERY_SUPPORTS_LODJOINS' value='yes' />
            <customization name='CAP_QUERY_TOPSTYLE_LIMIT' value='no' />
            <customization name='CAP_QUERY_TOPSTYLE_ROWNUM' value='no' />
            <customization name='CAP_QUERY_TOPSTYLE_TOP' value='no' />
            <customization name='CAP_QUERY_TOP_0_METADATA' value='yes' />
            <customization name='CAP_QUERY_TOP_N' value='yes' />
            <customization name='CAP_QUERY_USE_DOMAIN_RANGES_OPTIMIZATION' value='yes' />
            <customization name='CAP_QUERY_WHERE_FALSE_METADATA' value='no' />
            <customization name='CAP_SELECT_INTO' value='no' />
            <customization name='CAP_SELECT_TOP_INTO' value='no' />
            <customization name='CAP_STORED_PROCEDURE_PREFER_TEMP_TABLE' value='no' />
            <customization name='CAP_STORED_PROCEDURE_REPAIR_TEMP_TABLE_STRINGS' value='no' />
            <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_BUFFER' value='no' />
            <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_NEW_PROTOCOL' value='no' />
            <customization name='CAP_SUPPRESS_CONNECTION_POOLING' value='yes' />
            <customization name='CAP_SUPPRESS_DISCOVERY_QUERIES' value='no' />
            <customization name='CAP_SUPPRESS_GET_SERVER_TIME' value='yes' />
            <customization name='CAP_SUPPRESS_QUICK_FILTER_ACCELERATION_VIEWS' value='no' />
          </customizations>
        </connection-customization>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>text</remote-name>
            <remote-type>129</remote-type>
            <local-name>[text]</local-name>
            <parent-name>[tweets_sentiment]</parent-name>
            <remote-alias>text</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>created_at</remote-name>
            <remote-type>129</remote-type>
            <local-name>[created_at]</local-name>
            <parent-name>[tweets_sentiment]</parent-name>
            <remote-alias>created_at</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ts_created</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ts_created]</local-name>
            <parent-name>[tweets_sentiment]</parent-name>
            <remote-alias>ts_created</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>score</remote-name>
            <remote-type>129</remote-type>
            <local-name>[score]</local-name>
            <parent-name>[tweets_sentiment]</parent-name>
            <remote-alias>score</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Approx. Records' datatype='integer' name='[Calculation_1311208145825564]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Number of Records] * 60' />
      </column>
      <column caption='Sample Keywords' datatype='string' name='[Calculation_2171208143708613]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS(lower([text]), &quot;laptop&quot;) THEN &quot;laptop&quot;&#13;&#10;ELSEIF CONTAINS(lower([text]), &quot;xbox&quot;) THEN &quot;xbox&quot;&#13;&#10;ELSEIF CONTAINS(lower([text]), &quot;iphone&quot;) THEN &quot;iphone&quot;&#13;&#10;ELSEIF CONTAINS(lower([text]), &quot;playstation&quot;) THEN &quot;playstation&quot;&#13;&#10;END' />
      </column>
      <column caption='Title' datatype='string' name='[Calculation_3531208142125293]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&apos;Sentiment of &quot;&apos; + [Parameters].[Parameter 1] + &apos;&quot;&apos;' />
      </column>
      <column caption='Contains Keyword' datatype='boolean' name='[Calculation_3911208142031747]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS([text], [Parameters].[Parameter 1] )' />
      </column>
      <column caption='Timestamp (ET)' datatype='datetime' name='[Calculation_4531208110930359]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEADD(&apos;hour&apos;, -5, DATETIME(DATEADD(&apos;second&apos;, [ts_created], #1970-01-01#)))' />
      </column>
      <column caption='Sentiment' datatype='string' name='[Calculation_7051208124808140]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [score] == 0 THEN &quot;Neutral&quot;&#13;&#10;ELSEIF [score] &gt; 0 THEN &quot;Positive&quot;&#13;&#10;ELSEIF [score] &lt; 0 THEN &quot;Negative&quot;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Sample Keywords 2' datatype='string' name='[Sample Keywords (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS(lower([text]), &quot;apple&quot;) THEN &quot;apple&quot;&#13;&#10;ELSEIF CONTAINS(lower([text]), &quot;samsung&quot;) THEN &quot;samsung&quot;&#13;&#10;ELSEIF CONTAINS(lower([text]), &quot;sony&quot;) THEN &quot;sony&quot;&#13;&#10;ELSEIF CONTAINS(lower([text]), &quot;microsoft&quot;) THEN &quot;microsoft&quot;&#13;&#10;END' />
      </column>
      <column caption='Sentiment Score (bin)' datatype='integer' name='[Score (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[score]' peg='0' size='1' />
      </column>
      <column caption='Created At' datatype='string' datatype-customized='true' name='[created_at]' role='dimension' type='nominal'>
      </column>
      <column caption='Sentiment Score' datatype='real' datatype-customized='true' name='[score]' role='measure' type='quantitative'>
      </column>
      <column caption='Text' datatype='string' name='[text]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Ts Created' datatype='integer' name='[ts_created]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[Calculation_7051208124808140]' derivation='None' name='[none:Calculation_7051208124808140:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4531208110930359]' derivation='Day-Trunc' name='[tdy:Calculation_4531208110930359:ok]' pivot='key' type='ordinal' />
      <group caption='Action (DAY(Timestamp (ET)))' hidden='true' name='[Action (DAY(Timestamp (ET)))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tdy:Calculation_4531208110930359:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Sentiment)' hidden='true' name='[Action (Sentiment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_7051208124808140]' />
        </groupfilter>
      </group>
      <group caption='Action (Text)' hidden='true' name='[Action (Text)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[text]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Miki\Documents\My Tableau Repository\Datasources\W205\tweets_sentiment (default.tweets_sentiment) (default).tde' schema='Extract' tablename='Extract' update-time='12/08/2015 10:08:01 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_4531208110930359]' formula='DATEADD(&apos;hour&apos;, -5, DATETIME(DATEADD(&apos;second&apos;, [ts_created], #1970-01-01#)))' />
            <calculation column='[Calculation_7051208124808140]' formula='IF [score] == 0 THEN &quot;Neutral&quot;&#13;&#10;ELSEIF [score] &gt; 0 THEN &quot;Positive&quot;&#13;&#10;ELSE &quot;Negative&quot;&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='4218' timestamp-start='2015-12-08 22:08:01.029' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_4531208110930359</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Calculation_4531208110930359]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_4531208110930359</remote-alias>
              <ordinal>0</ordinal>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>2959</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2015-11-24 00:09:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2015-11-30 23:16:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_7051208124808140</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_7051208124808140]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_7051208124808140</remote-alias>
              <ordinal>1</ordinal>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Negative&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Positive&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>created_at</remote-name>
              <remote-type>129</remote-type>
              <local-name>[created_at]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>created_at</remote-alias>
              <ordinal>3</ordinal>
              <family>tweets_sentiment</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2959</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Fri Nov 27 00:00:00 +0000 2015&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wed Nov 25 23:58:00 +0000 2015&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>score</remote-name>
              <remote-type>4</remote-type>
              <local-name>[score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>score</remote-alias>
              <ordinal>4</ordinal>
              <family>tweets_sentiment</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-2.0</statistic>
                <statistic aggregation='Max' datatype='real'>4.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>text</remote-name>
              <remote-type>129</remote-type>
              <local-name>[text]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>text</remote-alias>
              <ordinal>5</ordinal>
              <family>tweets_sentiment</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2627</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;\&quot;Dica: loja vende iPhones 5s/6 com descontos de até 13\% nesta Black Friday!\&quot; https://t.co/HzPqZ7gj8L \#mac \#feedly&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;󾭣ATENÇÃO󾭣 BLACK FRIDAY⚠  O IPhone 6 será vendido amanhã nas lojas Americanas por 499,99.  Mas somente nas lojas... https://t.&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ts_created</remote-name>
              <remote-type>3</remote-type>
              <local-name>[ts_created]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ts_created</remote-alias>
              <ordinal>6</ordinal>
              <family>tweets_sentiment</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2959</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1448341740</statistic>
                <statistic aggregation='Max' datatype='integer'>1448943360</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_7051208124808140:nk]' type='palette'>
            <map to='#2ca02c'>
              <bucket>&quot;Positive&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Neutral&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Negative&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Keyword' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;playstation&quot;'>
          <calculation class='tableau' formula='&quot;playstation&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='minute_tweets (default.minute_tweets) (default)' inline='true' name='hadoophive.42346.557624085646' version='9.0'>
      <connection authentication='yes' authentication-type='2' class='hadoophive' connection-type='2' dbname='' odbc-connect-string-extras='' one-time-sql='' port='10000' schema='default' server='ec2-52-90-175-208.compute-1.amazonaws.com' username='root'>
        <relation name='minute_tweets' table='[default].[minute_tweets]' type='table' />
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
        <connection-customization class='hadoophive' enabled='false' version='9.0'>
          <vendor name='hadoophive' />
          <driver name='hadoophive' />
          <customizations>
            <customization name='CAP_CONNECT_STORED_PROCEDURE' value='no' />
            <customization name='CAP_CREATE_TEMP_TABLES' value='no' />
            <customization name='CAP_DEFERS_CONNECTION_VERIFICATION' value='no' />
            <customization name='CAP_FAST_METADATA' value='no' />
            <customization name='CAP_HIVE_FIX_METADATA_NAMES' value='no' />
            <customization name='CAP_INDEX_TEMP_TABLES' value='no' />
            <customization name='CAP_ODBC_ALWAYS_THROW_CONNECT_ERRORS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_DATETIME_AS_CHAR' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_DATE_AS_CHAR' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_MAX_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_MEDIUM_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_SIGNED' value='no' />
            <customization name='CAP_ODBC_BIND_FORCE_SMALL_STRING_BUFFERS' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_INT64' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_PREFERRED_TYPES' value='no' />
            <customization name='CAP_ODBC_BIND_SUPPRESS_WIDE_CHAR' value='no' />
            <customization name='CAP_ODBC_CURSOR_DYNAMIC' value='no' />
            <customization name='CAP_ODBC_CURSOR_FORWARD_ONLY' value='no' />
            <customization name='CAP_ODBC_CURSOR_KEYSET_DRIVEN' value='no' />
            <customization name='CAP_ODBC_CURSOR_STATIC' value='no' />
            <customization name='CAP_ODBC_DRIVER_HIVE_ASSUME_LATEST' value='no' />
            <customization name='CAP_ODBC_ERROR_IGNORE_FALSE_ALARM' value='no' />
            <customization name='CAP_ODBC_FETCH_BUFFERS_RESIZABLE' value='no' />
            <customization name='CAP_ODBC_FETCH_BUFFERS_SIZE_MASSIVE' value='no' />
            <customization name='CAP_ODBC_FETCH_CONTINUE_ON_ERROR' value='no' />
            <customization name='CAP_ODBC_FORCE_SINGLE_ROW_BINDING' value='no' />
            <customization name='CAP_ODBC_METADATA_STRING_LENGTH_UNKNOWN' value='no' />
            <customization name='CAP_ODBC_REBIND_SKIP_UNBIND' value='no' />
            <customization name='CAP_ODBC_TRIM_VARCHAR_PADDING' value='no' />
            <customization name='CAP_ODBC_UNBIND_AUTO' value='no' />
            <customization name='CAP_ODBC_UNBIND_BATCH' value='no' />
            <customization name='CAP_ODBC_UNBIND_EACH' value='no' />
            <customization name='CAP_ODBC_USE_NATIVE_PROTOCOL' value='no' />
            <customization name='CAP_QUERY_BLENDING_ALWAYS_USE_LOCAL_MAPPING_TABLES' value='no' />
            <customization name='CAP_QUERY_BLENDING_PREFER_LOCAL_MAPPING_TABLES' value='yes' />
            <customization name='CAP_QUERY_BLENDING_REMOTE_MAPPING_TABLES' value='yes' />
            <customization name='CAP_QUERY_BOOLEXPR_TO_INTEXPR' value='no' />
            <customization name='CAP_QUERY_BOOL_IDENTIFIER_TO_LOGICAL' value='no' />
            <customization name='CAP_QUERY_FORCE_AGGREGATE_MEASURES' value='no' />
            <customization name='CAP_QUERY_GROUP_BY_ALIAS' value='no' />
            <customization name='CAP_QUERY_GROUP_BY_DEGREE' value='no' />
            <customization name='CAP_QUERY_HAVING_REQUIRES_GROUP_BY' value='no' />
            <customization name='CAP_QUERY_HAVING_UNSUPPORTED' value='no' />
            <customization name='CAP_QUERY_JOIN_ACROSS_SCHEMAS' value='no' />
            <customization name='CAP_QUERY_JOIN_ASSUME_CONSTRAINED' value='no' />
            <customization name='CAP_QUERY_JOIN_PUSH_DOWN_CONDITION_EXPRESSIONS' value='no' />
            <customization name='CAP_QUERY_JOIN_REQUIRES_SCOPE' value='no' />
            <customization name='CAP_QUERY_JOIN_REQUIRES_SUBQUERY' value='no' />
            <customization name='CAP_QUERY_NULL_REQUIRES_CAST' value='no' />
            <customization name='CAP_QUERY_RECOMPILE_FAILED_QUERY' value='no' />
            <customization name='CAP_QUERY_SELECT_ALIASES_SORTED' value='no' />
            <customization name='CAP_QUERY_SIMPLIFY_SUBQUERY_CONTEXT_FOR_JOIN_CULLING' value='no' />
            <customization name='CAP_QUERY_SORT_BY' value='yes' />
            <customization name='CAP_QUERY_SORT_BY_DEGREE' value='no' />
            <customization name='CAP_QUERY_SUBQUERIES' value='yes' />
            <customization name='CAP_QUERY_SUBQUERIES_WITH_TOP' value='yes' />
            <customization name='CAP_QUERY_SUBQUERY_DATASOURCE_CONTEXT' value='yes' />
            <customization name='CAP_QUERY_SUBQUERY_QUERY_CONTEXT' value='yes' />
            <customization name='CAP_QUERY_SUPPORTS_LODJOINS' value='yes' />
            <customization name='CAP_QUERY_TOPSTYLE_LIMIT' value='no' />
            <customization name='CAP_QUERY_TOPSTYLE_ROWNUM' value='no' />
            <customization name='CAP_QUERY_TOPSTYLE_TOP' value='no' />
            <customization name='CAP_QUERY_TOP_0_METADATA' value='yes' />
            <customization name='CAP_QUERY_TOP_N' value='yes' />
            <customization name='CAP_QUERY_USE_DOMAIN_RANGES_OPTIMIZATION' value='yes' />
            <customization name='CAP_QUERY_WHERE_FALSE_METADATA' value='no' />
            <customization name='CAP_SELECT_INTO' value='no' />
            <customization name='CAP_SELECT_TOP_INTO' value='no' />
            <customization name='CAP_STORED_PROCEDURE_PREFER_TEMP_TABLE' value='no' />
            <customization name='CAP_STORED_PROCEDURE_REPAIR_TEMP_TABLE_STRINGS' value='no' />
            <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_BUFFER' value='no' />
            <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_NEW_PROTOCOL' value='no' />
            <customization name='CAP_SUPPRESS_CONNECTION_POOLING' value='yes' />
            <customization name='CAP_SUPPRESS_DISCOVERY_QUERIES' value='no' />
            <customization name='CAP_SUPPRESS_GET_SERVER_TIME' value='yes' />
            <customization name='CAP_SUPPRESS_QUICK_FILTER_ACCELERATION_VIEWS' value='no' />
          </customizations>
        </connection-customization>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>minute</remote-name>
            <remote-type>20</remote-type>
            <local-name>[minute]</local-name>
            <parent-name>[minute_tweets]</parent-name>
            <remote-alias>minute</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count]</local-name>
            <parent-name>[minute_tweets]</parent-name>
            <remote-alias>count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Timestamp (ET)' datatype='datetime' name='[Calculation_1391208132354684]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEADD(&apos;hour&apos;, -5, DATETIME(DATEADD(&apos;second&apos;, [minute], #1970-01-01#)))' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Minute' datatype='integer' name='[minute]' role='dimension' type='ordinal'>
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Miki\Documents\My Tableau Repository\Datasources\W205\minute_tweets (default.minute_tweets) (default).tde' schema='Extract' tablename='Extract' update-time='12/08/2015 10:09:37 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_1391208132354684]' formula='DATEADD(&apos;hour&apos;, -5, DATETIME(DATEADD(&apos;second&apos;, [minute], #1970-01-01#)))' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='9944' timestamp-start='2015-12-08 22:09:37.094' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_1391208132354684</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Calculation_1391208132354684]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1391208132354684</remote-alias>
              <ordinal>0</ordinal>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>9944</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2015-11-23 23:59:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2015-11-30 23:58:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>count</remote-name>
              <remote-type>2</remote-type>
              <local-name>[count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>count</remote-alias>
              <ordinal>2</ordinal>
              <family>minute_tweets</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>571</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>minute</remote-name>
              <remote-type>3</remote-type>
              <local-name>[minute]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>minute</remote-alias>
              <ordinal>3</ordinal>
              <family>minute_tweets</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9944</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1448341140</statistic>
                <statistic aggregation='Max' datatype='integer'>1448945880</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='hadoophive.42346.463601458330'>
      <datasources>
        <datasource caption='tweets_sentiment (default.tweets_sentiment) (default)' name='hadoophive.42346.463601458330' />
      </datasources>
      <datasource-dependencies datasource='hadoophive.42346.463601458330'>
        <column caption='Timestamp (ET)' datatype='datetime' name='[Calculation_4531208110930359]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='DATEADD(&apos;hour&apos;, -5, DATETIME(DATEADD(&apos;second&apos;, [ts_created], #1970-01-01#)))' />
        </column>
        <column-instance column='[Calculation_4531208110930359]' derivation='Year' name='[yr:Calculation_4531208110930359:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[hadoophive.42346.463601458330].[yr:Calculation_4531208110930359:ok]'>
        <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[yr:Calculation_4531208110930359:ok]' />
          <groupfilter function='member' level='[yr:Calculation_4531208110930359:ok]' member='%null%' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Daily Tweets'>
      <table>
        <view>
          <datasources>
            <datasource caption='minute_tweets (default.minute_tweets) (default)' name='hadoophive.42346.557624085646' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.42346.557624085646'>
            <column caption='Timestamp (ET)' datatype='datetime' name='[Calculation_1391208132354684]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;, -5, DATETIME(DATEADD(&apos;second&apos;, [minute], #1970-01-01#)))' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_1391208132354684]' derivation='Hour' name='[hr:Calculation_1391208132354684:ok]' pivot='key' type='ordinal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1391208132354684]' derivation='Day-Trunc' name='[tdy:Calculation_1391208132354684:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1391208132354684]' derivation='Day-Trunc' name='[tdy:Calculation_1391208132354684:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.42346.557624085646].[hr:Calculation_1391208132354684:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_1391208132354684:ok]' />
              <groupfilter function='member' level='[hr:Calculation_1391208132354684:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.42346.557624085646].[tdy:Calculation_1391208132354684:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Calculation_1391208132354684:ok]' />
              <groupfilter function='member' level='[tdy:Calculation_1391208132354684:ok]' member='#2015-11-23 00:00:00#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[hadoophive.42346.557624085646].[hr:Calculation_1391208132354684:ok]</column>
            <column>[hadoophive.42346.557624085646].[tdy:Calculation_1391208132354684:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[hadoophive.42346.557624085646].[sum:count:qk]' scope='rows' value='Tweets' />
            <format attr='subtitle' class='0' field='[hadoophive.42346.557624085646].[sum:count:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.42346.557624085646].[sum:count:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Segoe UI' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[hadoophive.42346.557624085646].[sum:count:qk]</rows>
        <cols>[hadoophive.42346.557624085646].[tdy:Calculation_1391208132354684:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Daily Tweets (sampled)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tweets_sentiment (default.tweets_sentiment) (default)' name='hadoophive.42346.463601458330' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.42346.463601458330'>
            <column caption='Approx. Records' datatype='integer' name='[Calculation_1311208145825564]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of Records] * 60' />
            </column>
            <column caption='Timestamp (ET)' datatype='datetime' name='[Calculation_4531208110930359]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;, -5, DATETIME(DATEADD(&apos;second&apos;, [ts_created], #1970-01-01#)))' />
            </column>
            <column-instance column='[Calculation_1311208145825564]' derivation='Sum' name='[sum:Calculation_1311208145825564:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4531208110930359]' derivation='Day-Trunc' name='[tdy:Calculation_4531208110930359:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4531208110930359]' derivation='Year' name='[yr:Calculation_4531208110930359:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.42346.463601458330].[Action (Sentiment)]'>
            <groupfilter function='level-members' level='[Calculation_7051208124808140]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[hadoophive.42346.463601458330].[Action (Text)]'>
            <groupfilter function='level-members' level='[text]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[hadoophive.42346.463601458330].[yr:Calculation_4531208110930359:ok]</column>
            <column>[hadoophive.42346.463601458330].[Action (Sentiment)]</column>
            <column>[hadoophive.42346.463601458330].[Action (Text)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Segoe UI' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[hadoophive.42346.463601458330].[sum:Calculation_1311208145825564:qk]</rows>
        <cols>[hadoophive.42346.463601458330].[tdy:Calculation_4531208110930359:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Hourly Tweets'>
      <table>
        <view>
          <datasources>
            <datasource caption='minute_tweets (default.minute_tweets) (default)' name='hadoophive.42346.557624085646' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.42346.557624085646'>
            <column caption='Timestamp (ET)' datatype='datetime' name='[Calculation_1391208132354684]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;, -5, DATETIME(DATEADD(&apos;second&apos;, [minute], #1970-01-01#)))' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_1391208132354684]' derivation='Hour' name='[hr:Calculation_1391208132354684:ok]' pivot='key' type='ordinal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1391208132354684]' derivation='Day-Trunc' name='[tdy:Calculation_1391208132354684:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1391208132354684]' derivation='Hour-Trunc' name='[thr:Calculation_1391208132354684:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.42346.557624085646].[hr:Calculation_1391208132354684:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[hr:Calculation_1391208132354684:ok]' />
              <groupfilter function='member' level='[hr:Calculation_1391208132354684:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.42346.557624085646].[tdy:Calculation_1391208132354684:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Calculation_1391208132354684:ok]' />
              <groupfilter function='member' level='[tdy:Calculation_1391208132354684:ok]' member='#2015-11-23 00:00:00#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[hadoophive.42346.557624085646].[hr:Calculation_1391208132354684:ok]</column>
            <column>[hadoophive.42346.557624085646].[tdy:Calculation_1391208132354684:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[hadoophive.42346.557624085646].[sum:count:qk]' scope='rows' value='Tweets' />
            <format attr='subtitle' class='0' field='[hadoophive.42346.557624085646].[sum:count:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.42346.557624085646].[sum:count:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Segoe UI' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[hadoophive.42346.557624085646].[sum:count:qk]</rows>
        <cols>[hadoophive.42346.557624085646].[thr:Calculation_1391208132354684:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sentiment'>
      <table>
        <view>
          <datasources>
            <datasource caption='tweets_sentiment (default.tweets_sentiment) (default)' name='hadoophive.42346.463601458330' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.42346.463601458330'>
            <column caption='Timestamp (ET)' datatype='datetime' name='[Calculation_4531208110930359]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;, -5, DATETIME(DATEADD(&apos;second&apos;, [ts_created], #1970-01-01#)))' />
            </column>
            <column caption='Sentiment' datatype='string' name='[Calculation_7051208124808140]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [score] == 0 THEN &quot;Neutral&quot;&#13;&#10;ELSEIF [score] &gt; 0 THEN &quot;Positive&quot;&#13;&#10;ELSEIF [score] &lt; 0 THEN &quot;Negative&quot;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_7051208124808140]' derivation='None' name='[none:Calculation_7051208124808140:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_4531208110930359]' derivation='Year' name='[yr:Calculation_4531208110930359:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.42346.463601458330].[Action (DAY(Timestamp (ET)))]'>
            <groupfilter function='member' level='[tdy:Calculation_4531208110930359:ok]' member='#2015-11-29 00:00:00#' user:ui-action-filter='[Action1]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[hadoophive.42346.463601458330].[Action (Text)]'>
            <groupfilter function='level-members' level='[text]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[hadoophive.42346.463601458330].[yr:Calculation_4531208110930359:ok]</column>
            <column>[hadoophive.42346.463601458330].[Action (DAY(Timestamp (ET)))]</column>
            <column>[hadoophive.42346.463601458330].[Action (Text)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[hadoophive.42346.463601458330].[none:Calculation_7051208124808140:nk]' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[hadoophive.42346.463601458330].[none:Calculation_7051208124808140:nk]' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Segoe UI' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.42346.463601458330].[none:Calculation_7051208124808140:nk]' />
              <text column='[hadoophive.42346.463601458330].[pcto:sum:Number of Records:qk:2]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[hadoophive.42346.463601458330].[pcto:sum:Number of Records:qk:2]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='304' />
                <format attr='maxheight' value='304' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[hadoophive.42346.463601458330].[pcto:sum:Number of Records:qk:2]</rows>
        <cols>[hadoophive.42346.463601458330].[none:Calculation_7051208124808140:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sentiment Trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='tweets_sentiment (default.tweets_sentiment) (default)' name='hadoophive.42346.463601458330' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.42346.463601458330'>
            <column caption='Approx. Records' datatype='integer' name='[Calculation_1311208145825564]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of Records] * 60' />
            </column>
            <column caption='Contains Keyword' datatype='boolean' name='[Calculation_3911208142031747]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([text], [Parameters].[Parameter 1] )' />
            </column>
            <column caption='Timestamp (ET)' datatype='datetime' name='[Calculation_4531208110930359]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;, -5, DATETIME(DATEADD(&apos;second&apos;, [ts_created], #1970-01-01#)))' />
            </column>
            <column caption='Sentiment' datatype='string' name='[Calculation_7051208124808140]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [score] == 0 THEN &quot;Neutral&quot;&#13;&#10;ELSEIF [score] &gt; 0 THEN &quot;Positive&quot;&#13;&#10;ELSEIF [score] &lt; 0 THEN &quot;Negative&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_3911208142031747]' derivation='None' name='[none:Calculation_3911208142031747:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7051208124808140]' derivation='None' name='[none:Calculation_7051208124808140:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1311208145825564]' derivation='Sum' name='[sum:Calculation_1311208145825564:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4531208110930359]' derivation='Hour-Trunc' name='[thr:Calculation_4531208110930359:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4531208110930359]' derivation='Year' name='[yr:Calculation_4531208110930359:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.42346.463601458330].[Action (DAY(Timestamp (ET)))]'>
            <groupfilter function='member' level='[tdy:Calculation_4531208110930359:ok]' member='#2015-11-27 00:00:00#' user:ui-action-filter='[Action1]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[hadoophive.42346.463601458330].[none:Calculation_3911208142031747:nk]'>
            <groupfilter function='member' level='[none:Calculation_3911208142031747:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[hadoophive.42346.463601458330].[yr:Calculation_4531208110930359:ok]</column>
            <column>[hadoophive.42346.463601458330].[Action (DAY(Timestamp (ET)))]</column>
            <column>[hadoophive.42346.463601458330].[none:Calculation_3911208142031747:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Segoe UI' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.42346.463601458330].[none:Calculation_7051208124808140:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[hadoophive.42346.463601458330].[sum:Calculation_1311208145825564:qk]</rows>
        <cols>[hadoophive.42346.463601458330].[thr:Calculation_4531208110930359:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='tweets_sentiment (default.tweets_sentiment) (default)' name='hadoophive.42346.463601458330' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.42346.463601458330'>
            <column caption='Contains Keyword' datatype='boolean' name='[Calculation_3911208142031747]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS([text], [Parameters].[Parameter 1] )' />
            </column>
            <column caption='Timestamp (ET)' datatype='datetime' name='[Calculation_4531208110930359]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;, -5, DATETIME(DATEADD(&apos;second&apos;, [ts_created], #1970-01-01#)))' />
            </column>
            <column-instance column='[Calculation_3911208142031747]' derivation='None' name='[none:Calculation_3911208142031747:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4531208110930359]' derivation='Day-Trunc' name='[tdy:Calculation_4531208110930359:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4531208110930359]' derivation='Year' name='[yr:Calculation_4531208110930359:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.42346.463601458330].[none:Calculation_3911208142031747:nk]'>
            <groupfilter function='member' level='[none:Calculation_3911208142031747:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[hadoophive.42346.463601458330].[yr:Calculation_4531208110930359:ok]</column>
            <column>[hadoophive.42346.463601458330].[none:Calculation_3911208142031747:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows></rows>
        <cols>[hadoophive.42346.463601458330].[tdy:Calculation_4531208110930359:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='tweets_sentiment (default.tweets_sentiment) (default)' name='hadoophive.42346.463601458330' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.42346.463601458330'>
            <column caption='Sample Keywords' datatype='string' name='[Calculation_2171208143708613]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS(lower([text]), &quot;laptop&quot;) THEN &quot;laptop&quot;&#13;&#10;ELSEIF CONTAINS(lower([text]), &quot;xbox&quot;) THEN &quot;xbox&quot;&#13;&#10;ELSEIF CONTAINS(lower([text]), &quot;iphone&quot;) THEN &quot;iphone&quot;&#13;&#10;ELSEIF CONTAINS(lower([text]), &quot;playstation&quot;) THEN &quot;playstation&quot;&#13;&#10;END' />
            </column>
            <column caption='Timestamp (ET)' datatype='datetime' name='[Calculation_4531208110930359]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;, -5, DATETIME(DATEADD(&apos;second&apos;, [ts_created], #1970-01-01#)))' />
            </column>
            <column caption='Sample Keywords 2' datatype='string' name='[Sample Keywords (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS(lower([text]), &quot;apple&quot;) THEN &quot;apple&quot;&#13;&#10;ELSEIF CONTAINS(lower([text]), &quot;samsung&quot;) THEN &quot;samsung&quot;&#13;&#10;ELSEIF CONTAINS(lower([text]), &quot;sony&quot;) THEN &quot;sony&quot;&#13;&#10;ELSEIF CONTAINS(lower([text]), &quot;microsoft&quot;) THEN &quot;microsoft&quot;&#13;&#10;END' />
            </column>
            <column caption='Sentiment Score (bin)' datatype='integer' name='[Score (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[score]' peg='0' size='1' />
            </column>
            <column-instance column='[Calculation_2171208143708613]' derivation='None' name='[none:Calculation_2171208143708613:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sample Keywords (copy)]' derivation='None' name='[none:Sample Keywords (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[score]' derivation='None' name='[none:score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[score]' derivation='Count' name='[pcto:cnt:score:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Sentiment Score' datatype='real' datatype-customized='true' name='[score]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_4531208110930359]' derivation='Year' name='[yr:Calculation_4531208110930359:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.42346.463601458330].[none:Calculation_2171208143708613:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_2171208143708613:nk]' />
              <groupfilter function='member' level='[none:Calculation_2171208143708613:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[hadoophive.42346.463601458330].[none:Sample Keywords (copy):nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sample Keywords (copy):nk]' />
              <groupfilter function='member' level='[none:Sample Keywords (copy):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[hadoophive.42346.463601458330].[yr:Calculation_4531208110930359:ok]</column>
            <column>[hadoophive.42346.463601458330].[none:Calculation_2171208143708613:nk]</column>
            <column>[hadoophive.42346.463601458330].[none:Sample Keywords (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[hadoophive.42346.463601458330].[pcto:cnt:score:qk]' scope='rows' value='% of Tweets (sampled ~60:1)' />
            <format attr='subtitle' class='0' field='[hadoophive.42346.463601458330].[pcto:cnt:score:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[hadoophive.42346.463601458330].[pcto:cnt:score:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[hadoophive.42346.463601458330].[Score (bin)]' value='75' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[hadoophive.42346.463601458330].[none:Calculation_2171208143708613:nk]' value='100' />
            <format attr='width' field='[hadoophive.42346.463601458330].[none:Sample Keywords (copy):nk]' value='96' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[hadoophive.42346.463601458330].[none:score:qk]' max='4.0' min='-4.0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Segoe UI' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[hadoophive.42346.463601458330].[none:score:qk]' />
              <text column='[hadoophive.42346.463601458330].[pcto:cnt:score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='159' />
                <format attr='maxheight' value='159' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([hadoophive.42346.463601458330].[none:Sample Keywords (copy):nk] * [hadoophive.42346.463601458330].[pcto:cnt:score:qk])</rows>
        <cols>[hadoophive.42346.463601458330].[Score (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Top Tweets'>
      <table>
        <view>
          <datasources>
            <datasource caption='tweets_sentiment (default.tweets_sentiment) (default)' name='hadoophive.42346.463601458330' />
          </datasources>
          <datasource-dependencies datasource='hadoophive.42346.463601458330'>
            <column caption='Approx. Records' datatype='integer' name='[Calculation_1311208145825564]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number of Records] * 60' />
            </column>
            <column caption='Timestamp (ET)' datatype='datetime' name='[Calculation_4531208110930359]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;, -5, DATETIME(DATEADD(&apos;second&apos;, [ts_created], #1970-01-01#)))' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[text]' derivation='None' name='[none:text:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1311208145825564]' derivation='Sum' name='[sum:Calculation_1311208145825564:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Text' datatype='string' name='[text]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4531208110930359]' derivation='Year' name='[yr:Calculation_4531208110930359:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[hadoophive.42346.463601458330].[Action (DAY(Timestamp (ET)))]'>
            <groupfilter function='member' level='[tdy:Calculation_4531208110930359:ok]' member='#2015-11-29 00:00:00#' user:ui-action-filter='[Action1]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[hadoophive.42346.463601458330].[Action (Sentiment)]'>
            <groupfilter function='level-members' level='[Calculation_7051208124808140]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[hadoophive.42346.463601458330].[none:text:nk]' direction='DESC' using='[hadoophive.42346.463601458330].[sum:Number of Records:qk]'>
          </sort>
          <slices>
            <column>[hadoophive.42346.463601458330].[yr:Calculation_4531208110930359:ok]</column>
            <column>[hadoophive.42346.463601458330].[Action (DAY(Timestamp (ET)))]</column>
            <column>[hadoophive.42346.463601458330].[Action (Sentiment)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[hadoophive.42346.463601458330].[none:text:nk]' value='41' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[hadoophive.42346.463601458330].[none:text:nk]' value='408' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='wrap' value='on' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[hadoophive.42346.463601458330].[none:text:nk]' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Segoe UI' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[hadoophive.42346.463601458330].[sum:Calculation_1311208145825564:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[hadoophive.42346.463601458330].[none:text:nk]</rows>
        <cols></cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='6' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='4' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='33375' id='3' name='Sentiment' w='49800' x='0' y='66625'>
              </zone>
              <zone h='33375' id='8' name='Top Tweets' show-title='true' w='49800' x='49800' y='66625'>
              </zone>
              <zone h='66625' id='9' name='Daily Tweets (sampled)' show-title='true' w='99600' x='0' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sentiment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[hadoophive.42346.463601458330].[none:Calculation_7051208124808140:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[hadoophive.42346.463601458330].[none:Calculation_3531208142125293:nk]</field>
          <field>[hadoophive.42346.463601458330].[none:Calculation_3911208142031747:nk]</field>
          <field>[hadoophive.42346.463601458330].[none:Calculation_7051208124808140:nk]</field>
          <field>[hadoophive.42346.463601458330].[tdy:Calculation_4531208110930359:qk]</field>
          <field>[hadoophive.42346.463601458330].[yr:Calculation_4531208110930359:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sentiment Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[hadoophive.42346.463601458330].[none:Calculation_7051208124808140:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[hadoophive.42346.463601458330].[none:Calculation_7051208124808140:nk]</field>
          <field>[hadoophive.42346.463601458330].[tdy:Calculation_4531208110930359:qk]</field>
          <field>[hadoophive.42346.463601458330].[yr:Calculation_4531208110930359:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Daily Tweets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[hadoophive.42346.557624085646].[yr:Calculation_1391208132354684:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Hourly Tweets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[hadoophive.42346.557624085646].[yr:Calculation_1391208132354684:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Top Tweets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[hadoophive.42346.463601458330].[attr:text:nk]</field>
          <field>[hadoophive.42346.463601458330].[none:Calculation_4531208110930359:qk]</field>
          <field>[hadoophive.42346.463601458330].[none:text:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[hadoophive.42346.463601458330].[yr:Calculation_4531208110930359:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Dashboard 1'>
      <active id='3' />
      <zones>
        <zone name='Sentiment'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[hadoophive.42346.463601458330].[none:Calculation_7051208124808140:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Daily Tweets (sampled)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[hadoophive.42346.463601458330].[none:score:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[hadoophive.42346.463601458330].[none:Calculation_2171208143708613:nk]</field>
          <field>[hadoophive.42346.463601458330].[none:Calculation_3911208142031747:nk]</field>
          <field>[hadoophive.42346.463601458330].[none:Calculation_7051208124808140:nk]</field>
          <field>[hadoophive.42346.463601458330].[none:Sample Keywords (copy):nk]</field>
          <field>[hadoophive.42346.463601458330].[none:score:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Daily Tweets (sampled)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[hadoophive.42346.463601458330].[yr:Calculation_4531208110930359:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sentiment' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sentiment Trend' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Daily Tweets' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Hourly Tweets' width='192'>
      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
      Ef4fGNf5FekLUjwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top Tweets' width='192'>
      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
    </thumbnail>
    <thumbnail height='62' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAA+CAIAAADyJoM5AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADR0lEQVR4nO3cXUhTYRzH8b+eECxsRCDBCK0MF6IXWjZ15YooyBA0XDgQFCpNgpJaDaIi
      oTKlpKSWkHmhudBosFBKkExMZGqIMpxvsRgDEUTMdCEd1sXUXNbF9te9yO9zd152eM748jwX
      e1iI0+kkAG+F+nsAENwQELAgIGBBQMCCgIAFAQELAgKWTf4egGcsFou/hwBugiwgIpLJZP4e
      AvyBJQxYEJCXorXN0dpmf4/C/xAQsCAgYEFAwIKAgAUBAQsCAhYEBCwICFgQELAgIGBBQMCC
      gIAFAQFL8O0HChDWsgx/DyEgYAYCluCbgbCrNbA4g83Q0JAXZ9b2NnxwGZYwYAlx4t85PGex
      WLC33wUzELAgIGDBEgYsmIGABQEBCwICFgRERHaDRqW+0zq14vBJj4fPEG2t5Zfy1SqVOv96
      dfekuOLpRq1aY7Cv1WADDAJaMtz0qsfh9aen217qw1SP6xr1uiJp7yNd2/TiBbux6vXXX2sz
      xECEgBZJTyjnaxrMotvJ2WHDvSK1SpV3sbzFukCOzorlucRcU1BQY16+c9vx27WX0yQCCRJ5
      Sjz9mJsnIiK7UWc6mJ3qu9fwOQS0ZKsy7+RonXHFUiMO6MuaQlU6vf5hhqP+bsNQeIpSbh8w
      TxPRWH9f+LH0uH88Z7b78+DuQ8lSItFm0JmSCjOjNvKXvJHfzVPSjLPxHXUds0vHE+Ojc8nK
      dIkgRCqPJMyYLXYhUam0fhl0kH2wX0hPjVn1iAXrmwf1YedvZEpJtBmr+5IKM3cKPn0JXwu+
      7RzrSIjJVm++VmuS//+OOHlKZUvP2FTXT0XxLvdr4kx39a3324vvF8dGENFEb9fIyLcruXrX
      1RINVVZkSddv8H6CGchN+IGCnPm3za51bMeevVtM7Z9mRHGy/eOAJE4mJRIS0hTjLS+66KjC
      vZ/ZnqelpsTSm2diI1wnpFkVjS4aBUXlbsh6CDPQKhGH87LfleiJiISEXG1OVeWF3OdC5P6c
      q6f3ERFRXLry+wfLKY17DubGZ522uc5zna7DjRvM3/BbGLBgCQMWBAQsCAhYEBCwICBgQUDA
      goCABQEBCwICFgQELAgIWBAQsCAgYEFAwIKAgAUBActvSsYf5aAbIEwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      ASoD7HapChcIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Daily Tweets (sampled)' width='192'>
      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
      wqmKbCUAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
